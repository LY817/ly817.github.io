(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{538:function(a,s,t){a.exports=t.p+"assets/img/1177828-20170929184033950-619493112.ced020da.png"},539:function(a,s,t){a.exports=t.p+"assets/img/20201025140219.dc0670ab.png"},540:function(a,s,t){a.exports=t.p+"assets/img/image-20191215125720525.c461b424.png"},541:function(a,s,t){a.exports=t.p+"assets/img/image-20191216204247104.1e1be056.png"},542:function(a,s,t){a.exports=t.p+"assets/img/image-20191215220101269.6b21a0a0.png"},543:function(a,s,t){a.exports=t.p+"assets/img/image-20191215220147034.be1bb1a1.png"},544:function(a,s,t){a.exports=t.p+"assets/img/image-20191213231428708.5dcfeb60.png"},640:function(a,s,t){"use strict";t.r(s);var n=t(21),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"编译-反编译命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译-反编译命令"}},[a._v("#")]),a._v(" 编译/反编译命令")]),a._v(" "),n("p",[n("code",[a._v("javac <java文件>")])]),a._v(" "),n("p",[n("code",[a._v("javap <class文件路径>")])]),a._v(" "),n("p",[n("code",[a._v("javap -c <class文件路径>")])]),a._v(" "),n("p",[n("code",[a._v("javap -verbose <class文件路径>")])]),a._v(" "),n("h1",{attrs:{id:"class-字节码文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#class-字节码文件"}},[a._v("#")]),a._v(" class 字节码文件")]),a._v(" "),n("p",[a._v("Class文件是一组以8位二进制数为基础单位的二进制流")]),a._v(" "),n("p",[a._v("各个数据项目严格按照顺序紧凑地排列在Class文件之中，中间"),n("strong",[a._v("没有添加任何分隔符")]),a._v("（根据JVM规范，按顺序依次读取并解析），这使得整个Class文件中存储的内容几乎全部是程序运行的必要数据，没有空隙存在。当遇到需要占用8位字节以上空间地数据项时，则会按照高位在前的方式分割成若干个8位二进制进行存储。")]),a._v(" "),n("h2",{attrs:{id:"基本数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),n("h3",{attrs:{id:"无符号数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无符号数"}},[a._v("#")]),a._v(" 无符号数")]),a._v(" "),n("p",[a._v("无符号数属于基本的数据类型，以u1，u2，u4，u8来分别代表1个字节，2个字节，4个字节和8个字节的无符号数，无符号数可以用来描述数字、索引引用、数量值或者按照UTF-8编码构成字符串值。")]),a._v(" "),n("h3",{attrs:{id:"表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#表"}},[a._v("#")]),a._v(" 表")]),a._v(" "),n("p",[a._v("表是由多个无符号数或者其他表作为数据项构成的复合数据类型，所有表都习惯性地以“ _info”结尾。表用于描述有层次关系的复合结构的数据，整个Class文件本质就是一张表。")]),a._v(" "),n("h2",{attrs:{id:"文件结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[a._v("#")]),a._v(" 文件结构")]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("       \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("下图为Test文件编译后的字节码文件结构")]),a._v(" "),n("p",[n("img",{attrs:{src:t(538),alt:""}})]),a._v(" "),n("p",[a._v("这种数据结构，类似C语言结构体。这个结构体中只有两种数据类型："),n("strong",[a._v("无符号数")]),a._v("和"),n("strong",[a._v("表")]),a._v("，后面的解析都要以这两种数据类型为基础")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("ClassFile {\n    u4 magic;\n    u2 minor_version;\n    u2 major_version;\n    u2 constant_pool_count;\n    cp_info constant_pool[constant_pool_count - 1];\n    u2 access_flags;\n    u2 this_class;\n    u2 super_class;\n    u2 interfaces_count;\n    u2 interfaces[interfaces_count];\n    u2 fields_count;\n    field_info fields[fields_count];\n    u2 methods_count;\n    method_info methods[methods_count];\n    u2 attributes_count;\n    attribute_info attributes[attributes_count];\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br")])]),n("p",[n("img",{attrs:{src:t(539),alt:""}})]),a._v(" "),n("h3",{attrs:{id:"验证魔法值-magic-number"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证魔法值-magic-number"}},[a._v("#")]),a._v(" 验证魔法值 Magic Number")]),a._v(" "),n("blockquote",[n("p",[a._v("4个字节")])]),a._v(" "),n("p",[a._v("Java 字节码文件的前4个字节固定为 "),n("code",[a._v("CA FE BA BE")])]),a._v(" "),n("h3",{attrs:{id:"jdk的版本号-version"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jdk的版本号-version"}},[a._v("#")]),a._v(" JDK的版本号 Version")]),a._v(" "),n("blockquote",[n("p",[a._v("2+2个字节")]),a._v(" "),n("ul",[n("li",[a._v("5,6字节表示minor version")]),a._v(" "),n("li",[a._v("7,8字节表示major version")])])]),a._v(" "),n("h3",{attrs:{id:"常量池-constant-pool"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量池-constant-pool"}},[a._v("#")]),a._v(" 常量池 Constant Pool")]),a._v(" "),n("p",[a._v("用来保存类文件中的常量，作为“资源仓库”被其他地方引用")]),a._v(" "),n("blockquote",[n("p",[a._v("2+n个字节")]),a._v(" "),n("p",[a._v("从第9个字节开始为常量池，长度不定。由常量池数量和常量池数组构成")])]),a._v(" "),n("ul",[n("li",[n("p",[a._v("常量池数组长度：9,10字节")]),a._v(" "),n("p",[n("strong",[a._v("常量池数组中元素的数量 = 常量池数组长度 - 1")])]),a._v(" "),n("p",[a._v("常量池数组中index为0不计入常量池，是保留常量，对应的null值")]),a._v(" "),n("p",[a._v("常量池的索引从1而非0开始")])]),a._v(" "),n("li",[n("p",[a._v("常量池数组：从11字节开始")]),a._v(" "),n("p",[a._v("常量池数组可以由不同的元素类型组成，每种元素的结构可以不同，但每一个元素的第一个字符都是一个u1类型作为类型标识位（tag）")]),a._v(" "),n("p",[n("img",{attrs:{src:t(540),alt:""}})]),a._v(" "),n("p",[a._v("JVM在解析常量池时，会根据u1类型来获取元素的具体类型")]),a._v(" "),n("p",[a._v("JDK1.7后又引入了3种方法动态调用的数据类型结构CONSTANT_MethodHandle_info,CONSTANT_MthodType_info和CONSTANT_InvokeDynamic_info")])])]),a._v(" "),n("h3",{attrs:{id:"类的访问控制标志-access-flags"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类的访问控制标志-access-flags"}},[a._v("#")]),a._v(" 类的访问控制标志 Access Flags")]),a._v(" "),n("blockquote",[n("p",[a._v("2个字节")])]),a._v(" "),n("p",[a._v("表示这个class类的访问权限 public/protected/private")]),a._v(" "),n("p",[n("img",{attrs:{src:t(541),alt:""}})]),a._v(" "),n("h3",{attrs:{id:"类名-this-class-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类名-this-class-name"}},[a._v("#")]),a._v(" 类名 This Class Name")]),a._v(" "),n("blockquote",[n("p",[a._v("2个字节")])]),a._v(" "),n("p",[a._v("表示当前类的名字（引用常量池中的字符）")]),a._v(" "),n("h3",{attrs:{id:"父类名-super-class-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父类名-super-class-name"}},[a._v("#")]),a._v(" 父类名 Super Class Name")]),a._v(" "),n("blockquote",[n("p",[a._v("2个字节  引用常量池的字符")])]),a._v(" "),n("p",[a._v("表示当前类继承的父类")]),a._v(" "),n("h3",{attrs:{id:"接口列表-interfaces"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接口列表-interfaces"}},[a._v("#")]),a._v(" 接口列表 Interfaces")]),a._v(" "),n("blockquote",[n("p",[a._v("2+n个字节")]),a._v(" "),n("ul",[n("li",[a._v("2表示接口个数")]),a._v(" "),n("li",[a._v("n表示n个接口名称字符在常量池的引用")])])]),a._v(" "),n("p",[a._v("表示当前类实现的接口（引用常量池变量）")]),a._v(" "),n("h3",{attrs:{id:"字段列表-fields"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字段列表-fields"}},[a._v("#")]),a._v(" 字段列表 Fields")]),a._v(" "),n("blockquote",[n("p",[a._v("2+n个字节")]),a._v(" "),n("ul",[n("li",[a._v("2表示域的个数")]),a._v(" "),n("li",[a._v("n表示方法表")])])]),a._v(" "),n("p",[a._v("表示当前类成员变量（引用常量池变量）")]),a._v(" "),n("h4",{attrs:{id:"field-info"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#field-info"}},[a._v("#")]),a._v(" field_info")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("method_info {\n\tu2 access_flags;\t\t// 方法的访问权限控制标志\n\tu2 name_index;\t\t\t// 方法名称指针 指向常量池\n\tu2 descriptor_index;\t// 方法描述符指针 指向常量池\n\tu2 attributes_acount;\t// 属性列表长度\n\tattribute_info attributes[attributes_count];// 属性列表\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("h3",{attrs:{id:"方法列表-methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法列表-methods"}},[a._v("#")]),a._v(" 方法列表 Methods")]),a._v(" "),n("p",[a._v("保存方法执行的JVM指令（助记符）")]),a._v(" "),n("blockquote",[n("p",[a._v("2+n个字节")]),a._v(" "),n("ul",[n("li",[a._v("2表示方法的个数")]),a._v(" "),n("li",[a._v("n表示方法表")])])]),a._v(" "),n("h4",{attrs:{id:"method-info结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#method-info结构"}},[a._v("#")]),a._v(" method_info结构")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("method_info {\n\tu2 access_flags;\t\t// 方法的访问权限控制标志\n\tu2 name_index;\t\t\t// 方法名称指针 指向常量池\n\tu2 descriptor_index;\t// 方法描述符指针 指向常量池\n\tu2 attributes_acount;\t// 属性列表长度\n\tattribute_info attributes[attributes_count];// 属性列表\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("ul",[n("li",[a._v("name_index和descriptor_index确定方法签名")]),a._v(" "),n("li",[a._v("方法信息的属性列表attributes，区别于方法的参数列表或成员变量，用来描述方法，在编译时确定\n"),n("ul",[n("li",[a._v("执行的字节码JVM命令")]),a._v(" "),n("li")])])]),a._v(" "),n("h4",{attrs:{id:"attribute-info"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attribute-info"}},[a._v("#")]),a._v(" attribute_info")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("attribute_info {\n\tu2 attribute_name_index;\t// 属性名索引\n\tu4 attribute_length;\n\tu1 info[attribute_length];\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h4",{attrs:{id:"code-attribute"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code-attribute"}},[a._v("#")]),a._v(" Code attribute")]),a._v(" "),n("p",[a._v("方法属性列表的第一个attribute_info为"),n("strong",[a._v("Code_attribute")]),a._v("（可以看出是attribute_info的扩展），保存方法的执行代码和相关信息")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Code_attribute {\n\tu2 attribute_name_index; \t// 属性名指针  指向常量池中的“Code”\n\tu4 attribute_length;\t\t// 后面从max_stack到attribute_info的字节长度\n\tu2 max_stack;\t\t\t\t// 运行时操作数栈的最大深度\n\tu2 max_locals;\t\t\n\t// 方法执行期间创建的局部变量的数目（包括传入的参数和局部变量）\n\tu4 code_length;\t\t\t\t// code数组长度 表示方法包含字节码指令的个数\n\tu1 code[code_length];\t\t// code数组 方法中的jvm字节码指令 \n\tu2 exception_table_length;\t// 异常表长度\n\t{\n\t\tu2 start_pc;\t\t\t// code数组中起始\n\t\tu2 end_pc;\t\t\t\t// code数组中结束 起始到结束中间的code指令抛出的异常\n\t\t\t\t\t\t\t\t// 会被这个表项处理\n\t\tu2 handler_pc;\t\t\t// 指向处理异常的代码开始处\n\t\tu2 catch_type;\t\t\t// 指向被处理的异常类型（常量池中的异常类）\n\t\t\t\t\t\t\t\t// catch_type为0时表示处理所有的异常\n\t} exception_table[exception_table_length];// 异常表数组\n\tu2 attributes_count;\t\t// 方法属性长度\n\tattribute_info attributes[attributes_count];// 方法属性表\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br")])]),n("h5",{attrs:{id:"code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code"}},[a._v("#")]),a._v(" Code")]),a._v(" "),n("p",[a._v("jvm字节码指令： "),n("strong",[a._v("一个字节对应一个JVM操作")]),a._v(" （根据"),n("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-6.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java指令集"),n("OutboundLink")],1),a._v("对应）")]),a._v(" "),n("p",[n("code",[a._v("code[code_length]")]),a._v(" 一个或多个（有些指令需要参数，会将后面的几个字节作为参数指针）code元素表示一行反编译出来的助记符")]),a._v(" "),n("h5",{attrs:{id:"行号表-linenumbertable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行号表-linenumbertable"}},[a._v("#")]),a._v(" 行号表 LineNumberTable")]),a._v(" "),n("p",[a._v("位于Code attribute的attributes表中，表示code数组中的字节码和Java源代码行号的对应关系。")]),a._v(" "),n("p",[a._v("调试的时候定位到代码执行的行数。当运行时抛异常，会把源代码中的对应行号打印出来")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("LineNumberTable_attribute {\n\tu2 attribute_name_index;\t// 名称指针 指向常量池中的“LineNumberTable”\n\tu4 attribute_length;\t\t// 数据长度\n\tu2 line_number_table_length;// 存在几对行号对应关系\n\t{\n\t\tu2 start_pc;\t\t\t// 字节码行号\n\t\tu2 line_number;\t\t\t// 源代码行号\n\t} line_number_table[line_number_table_length];\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br")])]),n("h5",{attrs:{id:"局部变量表-localvariabletable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#局部变量表-localvariabletable"}},[a._v("#")]),a._v(" 局部变量表 LocalVariableTable")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("LocalVariableTable_attribute {\n\tu2 attribute_name_index;\t// 名称指针 指向常量池中的“LocalVariableTable”\n\tu4 attribute_length;\t\t// 数据长度\n\tu2 local_variable_table_length;// 局部变量个数\n\t{\n\t\tu2 start_pc;\t\t\t// 字节码行号\n\t\tu2 length;\n        u2 name_index;\n        u2 descriptor_index;\n        u2 index;\n\t} local_variable_table[line_number_table_length];\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("ul",[n("li",[a._v("局部变量表中至少有一个局部变量"),n("code",[a._v("this")])]),a._v(" "),n("li",[a._v("方法列表属于局部变量表")]),a._v(" "),n("li",[a._v("方法内部声明的变量也属于局部变量表")])]),a._v(" "),n("h3",{attrs:{id:"附加属性列表-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附加属性列表-attributes"}},[a._v("#")]),a._v(" 附加属性列表 Attributes")]),a._v(" "),n("blockquote",[n("p",[a._v("2+n个字节")]),a._v(" "),n("ul",[n("li",[a._v("2表示附加属性的个数")]),a._v(" "),n("li",[a._v("n表示n个附加属性字符在常量池的引用")])])]),a._v(" "),n("p",[a._v("class字节码的附加属性 如SourceFile源文件名称（指向常量池中对应的名称）")]),a._v(" "),n("h2",{attrs:{id:"关键数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关键数据类型"}},[a._v("#")]),a._v(" 关键数据类型")]),a._v(" "),n("h3",{attrs:{id:"常量池-constant-pool-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量池-constant-pool-2"}},[a._v("#")]),a._v(" 常量池 Constant pool")]),a._v(" "),n("p",[a._v("Java类中定义的很多信息都是由常量池来维护或描述")]),a._v(" "),n("h4",{attrs:{id:"数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),n("p",[a._v("常量池中主要存储两类数据结构："),n("strong",[a._v("字面量")]),a._v("和"),n("strong",[a._v("符号引用")])]),a._v(" "),n("h5",{attrs:{id:"字面量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[a._v("#")]),a._v(" 字面量")]),a._v(" "),n("p",[a._v("包含bytes，保存实际数据")]),a._v(" "),n("p",[n("img",{attrs:{src:t(542),alt:"image-20191215220101269"}})]),a._v(" "),n("ul",[n("li",[a._v("文本字符串")]),a._v(" "),n("li",[a._v("声明为"),n("strong",[a._v("final")]),a._v("的常量值")])]),a._v(" "),n("h5",{attrs:{id:"符号引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#符号引用"}},[a._v("#")]),a._v(" 符号引用")]),a._v(" "),n("p",[a._v("包含index引用指针，指向其他符号引用或者字面量")]),a._v(" "),n("p",[n("img",{attrs:{src:t(543),alt:"image-20191215220147034"}})]),a._v(" "),n("ul",[n("li",[a._v("类与接口的全局限定名")]),a._v(" "),n("li",[a._v("字段的名称和描述符")]),a._v(" "),n("li",[a._v("方法的名称和描述符")])]),a._v(" "),n("blockquote",[n("p",[a._v("包含tag和"),n("strong",[a._v("引用指针")]),a._v("，最终通过指向")])]),a._v(" "),n("ul",[n("li",[a._v("类中定义的方法和变量信息")])]),a._v(" "),n("blockquote",[n("p",[a._v("可以把常量池作为Class文件的“资源仓库”，会通过index应用常量池中的常量信息")])]),a._v(" "),n("h4",{attrs:{id:"描述信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述信息"}},[a._v("#")]),a._v(" 描述信息")]),a._v(" "),n("p",[a._v("JVM规范中，每个变量、字段、方法都有描述信息，用来描述数据类型、方法的参数列表（包括数量、类型与顺序）与返回值。")]),a._v(" "),n("p",[a._v("描述信息"),n("strong",[a._v("不包括变量或者方法的名称")])]),a._v(" "),n("h5",{attrs:{id:"变量描述符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量描述符"}},[a._v("#")]),a._v(" 变量描述符")]),a._v(" "),n("p",[a._v("根据描述符规则，"),n("strong",[a._v("基本数据类型")]),a._v("和代表无返回值的"),n("strong",[a._v("void类型")]),a._v("都用一个大写字母来表示；对象类型则使用字符L+类的全限定名来表示；（为了压缩字节码文件的体积）")]),a._v(" "),n("ul",[n("li",[a._v("B - byte")]),a._v(" "),n("li",[a._v("C - char")]),a._v(" "),n("li",[a._v("D - double")]),a._v(" "),n("li",[a._v("F - float")]),a._v(" "),n("li",[a._v("I - int")]),a._v(" "),n("li",[a._v("J - long")]),a._v(" "),n("li",[a._v("S - short")]),a._v(" "),n("li",[a._v("Z- boolean")]),a._v(" "),n("li",[a._v("V - void")]),a._v(" "),n("li",[a._v("Lxxx/xxx/xxx - 对象类型 如 "),n("code",[a._v("Ljava/lang/String")])])]),a._v(" "),n("h5",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),n("p",[a._v("对于数组类型而言，每一个维度使用一个"),n("code",[a._v("[")]),a._v("来表示")]),a._v(" "),n("blockquote",[n("p",[n("code",[a._v("int[]")]),a._v("被记为"),n("code",[a._v("[I")]),a._v("；"),n("code",[a._v("String[][]")]),a._v("被记为"),n("code",[a._v("[[Ljava/lang/String")])])]),a._v(" "),n("h5",{attrs:{id:"方法描述符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法描述符"}},[a._v("#")]),a._v(" 方法描述符")]),a._v(" "),n("p",[a._v("用描述符描述方法时，按照"),n("code",[a._v("(参数列表) 返回值")]),a._v("的顺序来描述，参数列表按照参数的严格顺序放在一组"),n("code",[a._v("()")]),a._v("中")]),a._v(" "),n("blockquote",[n("p",[n("code",[a._v("String getName(int id,String code)")]),a._v("的描述符为")]),a._v(" "),n("p",[n("code",[a._v("(I,Ljava/lang/String;) Ljava/lang/String")])])]),a._v(" "),n("h1",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),n("h3",{attrs:{id:"java源文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java源文件"}},[a._v("#")]),a._v(" java源文件")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('public class Main {\n    public static void main(String[] args) {\n        test();\n    }\n    public static void test() {\n        System.out.println("test");\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("h3",{attrs:{id:"_16进制格式打开"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16进制格式打开"}},[a._v("#")]),a._v(" 16进制格式打开")]),a._v(" "),n("p",[a._v("开头的魔法值 CA FE BA BE")]),a._v(" "),n("blockquote",[n("p",[a._v("8位二进制数可以表示2位十六进制数")])]),a._v(" "),n("p",[n("img",{attrs:{src:t(544),alt:"image-20191213231428708"}})]),a._v(" "),n("h3",{attrs:{id:"反编译-javap-c"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反编译-javap-c"}},[a._v("#")]),a._v(" 反编译 Javap -c")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('Compiled from "Main.java"\npublic class org.ly817.sparrow.Main {\n  public org.ly817.sparrow.Main();\n    Code:\n       0: aload_0\n       1: invokespecial #1                  // Method java/lang/Object."<init>":()V\n       4: return\n\n  public static void main(java.lang.String[]);\n    Code:\n       0: invokestatic  #2                  // Method test:()V\n       3: return\n\n  public static void test();\n    Code:\n       0: getstatic     #3                  \n       // Field java/lang/System.out:Ljava/io/PrintStream;\n       3: ldc           #4                  // String test\n       5: invokevirtual #5                  \n       // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n       8: return\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br")])]),n("h3",{attrs:{id:"反编译-冗余信息-javap-verbose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反编译-冗余信息-javap-verbose"}},[a._v("#")]),a._v(" 反编译 冗余信息 Javap -verbose")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('Classfile /C:/workspace/sparrow/sparrow-api/target/classes/org/ly817/sparrow/Main.class\n  Last modified 2019-12-13; size 600 bytes\n  MD5 checksum 3e9467a4d724a67b0719f5d22036358b\n  Compiled from "Main.java"\npublic class org.ly817.sparrow.Main\n  minor version: 0\n  major version: 52\n  flags: ACC_PUBLIC, ACC_SUPER\nConstant pool:\n   // 默认构造方法\n   // #7  指向方法所属类的描述符（默认构造方法来自java/lang/Object）\n   // #22 指向方法名称/类型描述符（构造方法名称为 <init> ）\n   #1 = Methodref          #7.#22         // java/lang/Object."<init>":()V\n   // test方法\n   // #6  指向方法所属类的描述符（org/ly817/sparrow/Main）\n   // #23 指向方法名称/类型描述符（test:()V 表示名为test方法 入参为空 返回值为void）\n   #2 = Methodref          #6.#23         // org/ly817/sparrow/Main.test:()V \n   // 静态方法的引用\n   #3 = Fieldref           #24.#25   \n   // java/lang/System.out:Ljava/io/PrintStream;\n   \n   // String作为特殊的对象引用指向utf-8\n   // 表示System.out.println("test")中的"test"字符串\n   #4 = String             #19            // test\n   #5 = Methodref          #26.#27        \n   // java/io/PrintStream.println:(Ljava/lang/String;)V\n   // 定义类 指向类限定名常量\n   #6 = Class              #28            // org/ly817/sparrow/Main\n   // 定义继承接口 指向接口限定名常量\n   #7 = Class              #29            // java/lang/Object\n   // 常量池中的相关字面量\n   #8 = Utf8               <init>\n   #9 = Utf8               ()V\n  #10 = Utf8               Code\n  #11 = Utf8               LineNumberTable\n  #12 = Utf8               LocalVariableTable\n  #13 = Utf8               this\n  #14 = Utf8               Lorg/ly817/sparrow/Main;\n  #15 = Utf8               main\n  #16 = Utf8               ([Ljava/lang/String;)V\n  #17 = Utf8               args\n  #18 = Utf8               [Ljava/lang/String;\n  #19 = Utf8               test\n  #20 = Utf8               SourceFile     // 编译的源文件名\n  #21 = Utf8               Main.java      // 源文件名称\n  // 字面量的“封装”\n  #22 = NameAndType        #8:#9          // "<init>":()V\n  #23 = NameAndType        #19:#9         // test:()V\n  #24 = Class              #30            // java/lang/System\n  #25 = NameAndType        #31:#32        // out:Ljava/io/PrintStream;\n  #26 = Class              #33            // java/io/PrintStream\n  #27 = NameAndType        #34:#35        // println:(Ljava/lang/String;)V\n  // 常量：#6类名\n  #28 = Utf8               org/ly817/sparrow/Main\n  // 常量：#7接口名\n  #29 = Utf8               java/lang/Object\n  #30 = Utf8               java/lang/System\n  #31 = Utf8               out\n  #32 = Utf8               Ljava/io/PrintStream;\n  #33 = Utf8               java/io/PrintStream\n  #34 = Utf8               println\n  #35 = Utf8               (Ljava/lang/String;)V\n{\n  public org.ly817.sparrow.Main();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=1, locals=1, args_size=1          // 通过字节码就可以推断出需要的操作栈和变量表的大小\n         0: aload_0\n         1: invokespecial #1                  // Method java/lang/Object."<init>":()V\n         4: return\n      LineNumberTable:\n        line 11: 0\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       5     0  this   Lorg/ly817/sparrow/Main;\n\n  public static void main(java.lang.String[]);\n    descriptor: ([Ljava/lang/String;)V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=0, locals=1, args_size=1\n         0: invokestatic  #2                  // Method test:()V\n         3: return\n      LineNumberTable:\n        line 17: 0\n        line 23: 3\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       4     0  args   [Ljava/lang/String;\n\n  public static void test();\n    descriptor: ()V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=2, locals=0, args_size=0\n         0: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;\n         3: ldc           #4                  // String test\n         5: invokevirtual #5                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         8: return\n      LineNumberTable:\n        line 26: 0\n        line 27: 8\n}\nSourceFile: "Main.java"\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br"),n("span",{staticClass:"line-number"},[a._v("49")]),n("br"),n("span",{staticClass:"line-number"},[a._v("50")]),n("br"),n("span",{staticClass:"line-number"},[a._v("51")]),n("br"),n("span",{staticClass:"line-number"},[a._v("52")]),n("br"),n("span",{staticClass:"line-number"},[a._v("53")]),n("br"),n("span",{staticClass:"line-number"},[a._v("54")]),n("br"),n("span",{staticClass:"line-number"},[a._v("55")]),n("br"),n("span",{staticClass:"line-number"},[a._v("56")]),n("br"),n("span",{staticClass:"line-number"},[a._v("57")]),n("br"),n("span",{staticClass:"line-number"},[a._v("58")]),n("br"),n("span",{staticClass:"line-number"},[a._v("59")]),n("br"),n("span",{staticClass:"line-number"},[a._v("60")]),n("br"),n("span",{staticClass:"line-number"},[a._v("61")]),n("br"),n("span",{staticClass:"line-number"},[a._v("62")]),n("br"),n("span",{staticClass:"line-number"},[a._v("63")]),n("br"),n("span",{staticClass:"line-number"},[a._v("64")]),n("br"),n("span",{staticClass:"line-number"},[a._v("65")]),n("br"),n("span",{staticClass:"line-number"},[a._v("66")]),n("br"),n("span",{staticClass:"line-number"},[a._v("67")]),n("br"),n("span",{staticClass:"line-number"},[a._v("68")]),n("br"),n("span",{staticClass:"line-number"},[a._v("69")]),n("br"),n("span",{staticClass:"line-number"},[a._v("70")]),n("br"),n("span",{staticClass:"line-number"},[a._v("71")]),n("br"),n("span",{staticClass:"line-number"},[a._v("72")]),n("br"),n("span",{staticClass:"line-number"},[a._v("73")]),n("br"),n("span",{staticClass:"line-number"},[a._v("74")]),n("br"),n("span",{staticClass:"line-number"},[a._v("75")]),n("br"),n("span",{staticClass:"line-number"},[a._v("76")]),n("br"),n("span",{staticClass:"line-number"},[a._v("77")]),n("br"),n("span",{staticClass:"line-number"},[a._v("78")]),n("br"),n("span",{staticClass:"line-number"},[a._v("79")]),n("br"),n("span",{staticClass:"line-number"},[a._v("80")]),n("br"),n("span",{staticClass:"line-number"},[a._v("81")]),n("br"),n("span",{staticClass:"line-number"},[a._v("82")]),n("br"),n("span",{staticClass:"line-number"},[a._v("83")]),n("br"),n("span",{staticClass:"line-number"},[a._v("84")]),n("br"),n("span",{staticClass:"line-number"},[a._v("85")]),n("br"),n("span",{staticClass:"line-number"},[a._v("86")]),n("br"),n("span",{staticClass:"line-number"},[a._v("87")]),n("br"),n("span",{staticClass:"line-number"},[a._v("88")]),n("br"),n("span",{staticClass:"line-number"},[a._v("89")]),n("br"),n("span",{staticClass:"line-number"},[a._v("90")]),n("br"),n("span",{staticClass:"line-number"},[a._v("91")]),n("br"),n("span",{staticClass:"line-number"},[a._v("92")]),n("br"),n("span",{staticClass:"line-number"},[a._v("93")]),n("br"),n("span",{staticClass:"line-number"},[a._v("94")]),n("br"),n("span",{staticClass:"line-number"},[a._v("95")]),n("br"),n("span",{staticClass:"line-number"},[a._v("96")]),n("br"),n("span",{staticClass:"line-number"},[a._v("97")]),n("br"),n("span",{staticClass:"line-number"},[a._v("98")]),n("br"),n("span",{staticClass:"line-number"},[a._v("99")]),n("br"),n("span",{staticClass:"line-number"},[a._v("100")]),n("br"),n("span",{staticClass:"line-number"},[a._v("101")]),n("br"),n("span",{staticClass:"line-number"},[a._v("102")]),n("br"),n("span",{staticClass:"line-number"},[a._v("103")]),n("br"),n("span",{staticClass:"line-number"},[a._v("104")]),n("br"),n("span",{staticClass:"line-number"},[a._v("105")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);